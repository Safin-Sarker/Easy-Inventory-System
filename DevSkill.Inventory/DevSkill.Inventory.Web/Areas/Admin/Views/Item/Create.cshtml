@model ItemCreateModel
@{
    ViewData["Title"] = "Create";
}



@section Styles
{
   

    <link rel="stylesheet" href="~/adminlte/css/adminlte.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
}


<partial name="_ResponsePartial" />
<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-4">
            <!-- Title and Back Icon Row with Flexbox for proper alignment -->
            <div class="col-12 d-flex justify-content-between align-items-center">
                <!-- Title on the left -->
                <h1 class="text-start">
                    <i class="fas fa-edit fa-w-18 me-1" data-fa-transform="shrink-3"></i> <b>New Item </b>
                </h1>

                <!-- Back Icon on the right -->
                <a  asp-area="Admin" asp-controller="Item" asp-action="Index" class="custom-back-icon" data-fa-transform="shrink-3">
                    <i class="fa-solid fa-reply"></i>
                </a>

            </div>
        </div>

</section>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <!-- Form column -->
            <div class="col-12 mx-auto">
                <!-- Form card -->
                <div class="card shadow-sm p-4">
                    <div class="card-body">
                        <!-- Form start -->
                        <form asp-antiforgery="true" asp-area="Admin" asp-controller="Item" asp-action="Create" method="post" enctype="multipart/form-data">

                            <div class="row mb-3">
                                <!-- All form elements under one col-sm-6 -->
                                <div class="col-sm-6 ">
                                    <!-- Item Type (Inline radios) -->
                                    <div class="row mb-3">
                                        <div class="col-sm-4 text-center">
                                            <label class=" col-form-label">Item Type <span class="text-danger">*</span></label>
                                            <a class="ms-1" type="button" title="Product is physical items you can hold or store (laptops, keyboards...) . Service is expertise you provide (consultancy, car servicing...) . Please remember inventory can be tracked only for Product.">
                                                <i class="far fa-question-circle" ></i>
                                            </a>
                                        </div>
                                        <div class="col-sm-8">
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" asp-for="ItemType" id="product" value="product" onclick="toggleInventory('product')"/>
                                                <label class="form-check-label" for="product">Product</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" asp-for="ItemType" id="service" value="service" onclick="toggleInventory('service')"/>
                                                <label class="form-check-label" for="service">Service</label>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Name -->
                                    <div class="row mb-3">  
                                       <div class="col-sm-4 text-center">
                                        <label asp-for="Name" class=" col-form-label">Name <span class="text-danger">*</span></label>
                                       </div>
                                        <div class="col-sm-8">
                                            <input type="text" asp-for="Name" class="form-control" placeholder="Enter product name..."/>
                                            <span asp-validation-for="Name" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Description -->
                                    <div class="row mb-3">
                                       <div class="col-sm-4 text-center">
                                        <label asp-for="Description" class=" col-form-label ">Description</label>
                                       </div>
                                        <div class="col-sm-8">
                                            <textarea asp-for="Description" class="form-control text-center" rows="2" placeholder="Description will be available for all forms when we select a product..."></textarea>
                                            <span asp-validation-for="Description" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Product Code -->
                                    <div class="row mb-3">
                                        <label asp-for="ItemCode" class="col-sm-4 col-form-label text-center">Product Code</label>
                                        <div class="col-sm-8">
                                            <input asp-for="ItemCode" type="text" class="form-control" placeholder="Enter product code..."/>
                                        </div>
                                    </div>

                                    <!-- Unit of Measure -->
                                    <div class="row mb-3">
                                        <label asp-for="UnitOfMeasure" class="col-sm-4 col-form-label text-center">Unit of Measure</label>
                                        <div class="col-sm-8">
                                            <input asp-for="UnitOfMeasure" type="text" class="form-control" placeholder="Enter unit (e.g. kg, pcs...)"/>
                                        </div>
                                    </div>

                                    <!-- Category -->
                                    <div class="row mb-3">
                                        <label asp-for="Category" class="col-sm-4 col-form-label text-center">Category</label>
                                        <div class="col-sm-8">
                                            <input asp-for="Category" type="text" class="form-control" placeholder="Separate multiple categories by commas..."/>
                                            <span asp-validation-for="Category" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Image Upload -->
                                    <div class="row mb-3">
                                        <label asp-for="Image" class="col-sm-4 col-form-label text-center">Upload Image</label>
                                        <div class="col-sm-8">
                                            <input asp-for="Image" type="file" class="form-control" />
                                            <span asp-validation-for="Image" class="text-danger"></span>
                                        </div>
                                    </div>


                                    <hr class="my-3">

                                    <!-- Inventory Tracking -->
                                    <div class="row mb-3">
                                        <div class="col-sm-10 ms-2">
                                            <h5 class="ms-2 text-700">Product Inventory Information</h5>
                                            <label class="ms-2 ">Inventory once enabled cannot changed after the form is saved.</label>
                                        </div>
                                     
                                    </div>

                                    <!-- Inventory Message for Service -->
                                    <div id="inventoryMessage" class="alert alert-warning d-none">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Inventory tracking is not available for Service item. Please select <strong>Product</strong> option in item type to enable inventory.
                                    </div>



                                    <div id="inventorySection" class="row mb-3">
                                        <div class="col-sm-8 ms-4">
                                            <div class="col-sm-8 ms-4">
                                                <div class="form-check form-switch">
                                               
                                                    <input asp-for="TrackInventory" class="form-check-input" id="trackInventoryCheckbox" type="checkbox" value="true" />
                                                    <label class="form-check-label" for="trackInventoryCheckbox">Track Inventory for this Product</label>
                                                </div>
                                        </div>
                                    </div>

                                    <!-- Inventory Fields (hidden initially) -->
                                    <div id="inventoryFields" class="d-none">
                                        <div class="row mb-3">
                                                <label asp-for="OpeningStock" class="col-sm-4 col-form-label text-center">Opening Stock</label>
                                            <div class="col-sm-8">
                                                    <input asp-for="OpeningStock" type="number" class="form-control" id="openingStock" name="OpeningStock" placeholder="Enter opening stock..."
                                                       data-bs-toggle="modal" data-bs-target="#warehouseModal" />
                                            </div>
                                        </div>

                                        <partial name="_WarehouseModalPartial" />
                                        <div class="row mb-3">
                                                <label asp-for="ReorderLevel" class="col-sm-4 col-form-label text-center">Reorder Level</label>
                                            <div class="col-sm-8">
                                                    <input type="number" class="form-control" asp-for="ReorderLevel" placeholder="Enter reorder level..." />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <hr class="my-3">
                            <!-- Submit button -->
                            <div class="row">
                                <div class="col-sm-10 offset-sm-2 d-flex justify-content-start">
                                    <!-- Save Button -->
                                    <button type="submit" class="btn btn-success btn-lg" name="commit" value="Save" style="margin-right: 20px;">
                                        <i class="far fa-check-square me-1"></i> Save
                                    </button>

                                    <!-- Save & Add New Button -->
                                    <button type="submit" class="btn btn-primary btn-lg" name="commit" value="SaveAndNew" style="margin-right: 20px;">
                                        <i class="far fa-check-square me-1"></i> Save & Add New
                                    </button>

                                    <a class="btn btn-outline-danger btn-lg" href="">Cancel</a>
                                </div>
                            </div>

                        </form>

                        <partial name="_WarehouseModalPartial" />
                    </div>
                </div>
                <!-- /.Form card -->
            </div>
            <!--/.col -->
        </div>
    </div>
</section>


@section Scripts{

    


    <script>
        tinymce.init({
            selector: '#Description', 
            menubar: false, 
            plugins: 'lists link image',
            license_key: 'gpl',
            toolbar: 'undo redo | formatselect | bold italic | alignleft aligncenter alignright | bullist numlist outdent indent | link image'
           
        });
    </script>


    <script>
        // Toggle inventory section based on item type selection
        function toggleInventory(itemType) {
            const inventorySection = document.getElementById('inventorySection');
            const inventoryMessage = document.getElementById('inventoryMessage');
            const inventoryFields = document.getElementById('inventoryFields');

            if (itemType === 'product') {
                inventorySection.classList.remove('d-none');
                inventoryMessage.classList.add('d-none');
                inventoryFields.classList.add('d-none');
            } else if (itemType === 'service') { // Show warning for service type
                inventorySection.classList.add('d-none');
                inventoryMessage.classList.remove('d-none');
                inventoryFields.classList.add('d-none');
            } else { // Default behavior when no selection is made
                inventorySection.classList.add('d-none');
                inventoryMessage.classList.remove('d-none');
                inventoryFields.classList.add('d-none');
            }
        }

        // Handle track inventory checkbox
        document.getElementById('trackInventoryCheckbox').addEventListener('change', function () {
            const inventoryFields = document.getElementById('inventoryFields');
            if (this.checked) {
                inventoryFields.classList.remove('d-none');
            } else {
                inventoryFields.classList.add('d-none');
            }
        });

        // Trigger the toggle function on page load to ensure correct state
        window.onload = function () {
            const checkedRadio = document.querySelector('input[name="itemType"]:checked');
            if (checkedRadio) {
                toggleInventory(checkedRadio.value);
            } else {
                toggleInventory(); // If nothing is selected, show warning
            }
        };
    </script>

    <script>
        
        function updateOpeningStock() {            
            const quantities = document.querySelectorAll('.warehouse-quantity');
            let totalQuantity = 0;
            
            quantities.forEach(input => {
                const value = parseInt(input.value) || 0; 
                totalQuantity += value;
            });
          
            const openingStockField = document.getElementById('openingStock');
            if (openingStockField) {
                openingStockField.value = totalQuantity;
            }
        }

        document.querySelectorAll('.warehouse-quantity').forEach(input => {
            input.addEventListener('input', updateOpeningStock);
        });

        $('#warehouseModal').on('shown.bs.modal', function () {
            updateOpeningStock(); 
        });
    </script>

    <script>
        // Add Debugging Code for Checkboxes Here
        document.querySelector('form').addEventListener('submit', function () {
            const checkboxes = document.querySelectorAll('input[type="checkbox"][name*="IsSelected"]');
            const quantities = document.querySelectorAll('input[name*="Quantity"]');
            const prices = document.querySelectorAll('input[name*="UnitPrice"]');

            console.log("Checkbox States Before Form Submission:");
            checkboxes.forEach(function (checkbox) {
                console.log(`${checkbox.name} = ${checkbox.checked}`);
            });

            console.log("Quantities Before Form Submission:");
            quantities.forEach(function (quantity) {
                console.log(`${quantity.name} = ${quantity.value}`);
            });

            console.log("Prices Before Form Submission:");
            prices.forEach(function (price) {
                console.log(`${price.name} = ${price.value}`);
            });
        });

    </script>


    <script>
        $(document).ready(function () {
            console.log("Document is ready and script is running");

            // Disable Quantity and Unit Price fields initially if the checkbox is not checked
            $('.warehouse-checkbox').each(function () {
                var row = $(this).closest('tr');
                var quantityInput = row.find('.warehouse-quantity');
                var unitPriceInput = row.find('.warehouse-unit-price');

                if (!$(this).is(':checked')) {
                    quantityInput.prop('disabled', true).val(''); // Disable and clear value
                    unitPriceInput.prop('disabled', true).val(''); // Disable and clear value
                }
            });

            // Toggle input fields based on checkbox state
            $('.warehouse-checkbox').on('change', function () {
                var row = $(this).closest('tr');
                var quantityInput = row.find('.warehouse-quantity');
                var unitPriceInput = row.find('.warehouse-unit-price');

                if ($(this).is(':checked')) {
                    quantityInput.prop('disabled', false);  // Enable Quantity
                    unitPriceInput.prop('disabled', false);  // Enable Unit Price
                } else {
                    quantityInput.prop('disabled', true).val(''); // Disable and clear value
                    unitPriceInput.prop('disabled', true).val(''); // Disable and clear value
                }
            });

            // Prevent focusing on Quantity or Unit Price without checking the checkbox
            $('.warehouse-quantity, .warehouse-unit-price').on('focus', function () {
                var row = $(this).closest('tr');
                var checkbox = row.find('.warehouse-checkbox');

                if (!checkbox.is(':checked')) {
                    $(this).blur(); // Remove focus from the input
                    alert("Please select the checkbox for this warehouse before entering Quantity or Unit Price.");
                }
            });

            // Handle Save button click to validate the form
            $('#submitWarehouseForm').on('click', function (e) {
                e.preventDefault(); // Prevent default form submission

                var anyChecked = false;
                var isValid = true;

                // Validate each row for selected warehouses
                $('.warehouse-checkbox').each(function () {
                    var row = $(this).closest('tr');
                    var quantityInput = row.find('.warehouse-quantity');

                    if ($(this).is(':checked')) {
                        anyChecked = true;

                        // If checkbox is checked, validate only Quantity input
                        if (quantityInput.val() === '' || parseInt(quantityInput.val()) <= 0) {
                            isValid = false;
                            quantityInput.addClass('is-invalid');
                            alert("Please enter Quantity  for all selected warehouses.");// Optional: Highlight invalid input
                        } else {
                            quantityInput.removeClass('is-invalid'); // Remove highlight if correct
                        }
                    }
                });


                if (!anyChecked) {
                    console.log("No warehouse selected.");
                } else if (isValid) {
                    saveClicked = true; // Indicate that Save button was clicked
                    $('#warehouseModal').modal('hide'); // Close the modal
                }
            });

            // Set `saveClicked` to false when any modal dismiss button (Close or Cancel) is clicked
            $('[data-bs-dismiss="modal"]').on('click', function () {
                console.log("Close or Cancel button clicked, setting saveClicked to false.");
                saveClicked = false; // Reset the flag for Close or Cancel
            });

            // Reset modal inputs when the modal is hidden if not saved
            $('#warehouseModal').on('hidden.bs.modal', function () {
                if (!saveClicked) {
                    console.log("Modal is being hidden, resetting inputs...");

                    // Uncheck all checkboxes
                    $('.warehouse-checkbox').prop('checked', false);

                    // Reset Quantity and Unit Price fields to 0 and disable them
                    $('.warehouse-quantity, .warehouse-unit-price').each(function () {
                        $(this).val('0'); // Reset values to 0
                        $(this).prop('disabled', true); // Disable the fields
                    });

                    // Set opening stock field to 0
                    $('#openingStock').val('0');
                    console.log("Modal reset complete.");
                } else {
                    console.log("Save button was clicked, keeping the values intact.");
                }

                saveClicked = false; // Reset the flag after the modal is closed
            });
        });
    </script>



    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


    <partial name="_ValidationScriptsPartial" />
}

